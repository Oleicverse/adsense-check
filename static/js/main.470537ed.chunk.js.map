{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["CloseButton","onClick","className","ShowButton","App","useState","adShow","setAdShow","style","background","display","client","slot","format","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAKMA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,OACE,wBAAQC,UAAU,WAAWD,QAASA,EAAtC,oBAMEE,EAAa,SAAC,GAAiB,IAAfF,EAAc,EAAdA,QACpB,OACE,wBAAQC,UAAU,WAAWD,QAASA,EAAtC,mBA6BWG,MAvBf,WAAgB,IAAD,EACeC,oBAAS,GADxB,mBACNC,EADM,KACEC,EADF,KAGb,OACE,sBAAKL,UAAU,0BAClBM,MAAO,CAAEC,WAAY,wFADlB,UAEE,cAAC,EAAD,CAAYR,QAAS,kBAAMM,GAAU,MACrC,sBACEL,UAAU,oFACVM,MAAO,CAAEE,QAASJ,EAAS,GAAK,QAFlC,UAGE,qBAAKJ,UAAU,cAAf,SACE,cAAC,IAAD,CACES,OAAO,0BACPC,KAAK,aACLC,OAAO,OAGX,cAAC,EAAD,CAAaZ,QAAS,kBAAMM,GAAU,aC1B/BO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.470537ed.chunk.js","sourcesContent":["import './App.css';\nimport { Adsense } from '@ctrl/react-adsense';\nimport { useState } from 'react';\n\n\nconst CloseButton = ({ onClick }) => {\n  return (\n    <button className=\"border-2\" onClick={onClick}>\n      Close\n    </button>\n  )\n}\n\nconst ShowButton = ({ onClick }) => {\n  return (\n    <button className=\"border-2\" onClick={onClick}>\n      Show\n    </button>\n  )\n}\n\nfunction App() {\n  const [adShow, setAdShow] = useState(true)\n\n  return (\n    <div className=\"App h-screen text-white\"\n style={{ background: 'url(https://www.publicdomainpictures.net/pictures/320000/velka/background-image.png)' }}>\n      <ShowButton onClick={() => setAdShow(true)}/>\n      <div\n        className=\"flex flex-col h-full items-center justify-center backdrop-filter backdrop-blur-lg\"\n        style={{ display: adShow ? \"\" : \"none\" }}>\n        <div className=\"w-1/2 h-1/2\">\n          <Adsense\n            client=\"ca-pub-5006765521801507\"\n            slot=\"6935948671\"\n            format=\"\"\n          />\n        </div>\n        <CloseButton onClick={() => setAdShow(false)} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}